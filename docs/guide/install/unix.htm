<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<!--
Copyright 2010-2018 Yusef Badri - All rights reserved.
Mailismus is distributed under the terms of the GNU Affero General Public License, Version 3 (AGPLv3).
-->
<HTML>
<HEAD>
<TITLE>Mailismus - Admin Guide</TITLE>
<meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/>
<link rel="stylesheet" type="text/css" href="../mta.css"/>
</HEAD>
<BODY>

<div class="topcorner">
<br/>
<center>
<img src="../mlogo.png">
</center>
</div>

<div class="banner">
<span class="bannertext">
Mailismus ${project.version}
<br/>
Administration Guide
</span>
</div>

<div class="menu">
<p>
<a href="../index.htm">Contents</a>
</p>
<hr class="mline"/>
<p>
<a href="index.htm">2&nbsp;-&nbsp;Installation</a>
</p>
<hr class="mline"/>
<p class="cursect">
2.1&nbsp;-&nbsp;Unix
</p>
<p>
<a href="#before">2.1.1&nbsp;-&nbsp;Prerequisites</a>
</p>
<p>
<a href="#install">2.1.2&nbsp;-&nbsp;Install</a>
</p>
<p>
<a href="#setup">2.1.3&nbsp;-&nbsp;Setup</a>
</p>
<p>
<a href="#nextsteps">2.1.4&nbsp;-&nbsp;Next Steps</a>
</div>

<div class="page">
<table class="chtitle" width="100%">
<tr><td>
<center>
2.1 - Unix Installation
</center>
</td></tr>
</table>

<p>
&nbsp;<br/>
Mailismus is open source and you can build it yourself, but it is also available as a binary package, and that is the subject of this section.<br/>
The Unix installation is based on a generic all-platforms ZIP, which you simply unpack.
</p>

<hr class="pline"/>
<h2>
<a name="before">
2.1.1 - Prerequisites
</a>
</h2>

<p>
The only external dependency is a Java JRE (full SDK not necessary).
<br/>
If not already on your system, it can be downloaded from Oracle.
<br/> <br/>
The
<dfn>JAVA_HOME</dfn>
environment variable should ideally be set, but if it isn't, then the
<dfn>java</dfn>
executable must at least be on your Path.
This can be handled in the init script in step 2.1.2 below.
</p>

<hr class="pline"/>
<h2>
<a name="install">
2.1.2 - Install Mailismus
</a>
</h2>

<p>
The generic all-platforms ZIP archive is offered in two formats: as both an actual
<span class="pathname">.zip</span>
file and a
<span class="pathname">.tar.gz</span>
compressed tarfile.
<br/>
Installing Mailismus consists of simply unzipping/untarring this archive in place, and running it from there.
You may extract it to wherever you wish, but for our purposes let's assume it's unpacked into
<span class="pathname">/opt/mailismus</span>,
which we shall refer to as
<span class="pathname">MTAHOME</span>
for the remainder of this chapter.

<br/> <br/>
Note that a copy of this admin guide can be found under
<span class="pathname">MTAHOME/docs</span>.

<br/> <br/>
Mailismus can now be started as simply as this
<div>
<span class="vt220">sh /path/to/MTAHOME/bin/mta.sh start</span>
</div><br/>
And it can be halted with the corresponding
<span class="compcode">stop</span>
command.
<br/> <br/>
Note that you have to be root to start Mailismus, as it binds to privileged TCP ports to listen for SMTP, POP3 and IMAP connections.

<br/> <br/>
<hr width="50%"/>
<br/>

In general you will want Mailismus to start automatically on system boot, so you will need to integrate it into the OS boot process.
<br/>
That is described here, but before doing this you should work through section &sect;2.1.3 to verify that Mailismus starts up ok manually.

<br/> <br/>
First create the file
<span class="pathname">/etc/init.d/mailismus</span>
by pasting in the content below, and make it executable.
<br/>
You will have to edit the mta.sh line to specify the actual pathname of your Mailismus installation.
<br/>
Depending on whether JAVA_HOME and/or PATH is already defined as needed elsewhere, you also need to comment out or edit the
<dfn>JAVA_HOME</dfn>
assignment as appropriate, to enable Mailismus to locate the
<dfn>java</dfn>
executable (typically at
<span class="pathname">$JAVA_HOME/bin/java</span>)
</p>

<table class="cfgbox">
<tr><td>
<pre>
#!/bin/sh
### BEGIN INIT INFO
# Provides: mailismus
# Required-Start: $network $remote_fs $syslog
# Required-Stop: $network $remote_fs $syslog
# Default-Start: 3 5
# Default-Stop: 0 1 2 6
# Description: Mailismus mail server
### END INIT INFO

export JAVA_HOME=/path/to/JDK_or_JRE
sh /path/to/MTAHOME/bin/mta.sh $*
</pre>
</td></tr>
</table>

<p>
There are several ways to enable this init script, depending on your flavour of Unix/Linux.
</p>

<ul>
<li>
If you are on a
<span class="softname">systemd</span>-based Linux system, you can configure Mailismus into its boot sequence by running this from the Linux shell:
<br/>
<span class="pathname">systemctl enable mailismus</span>
<br/>
You could choose to add a native systemd config file instead of using the above init.d script before running systemctl, but that is beyond the scope of this guide.
The above systemctl command will still work with an init.d script in a backwards-compatible mode, possibly with some harmless warnings that this is not a native service.
</li>

<li>
The pre-Systemd
<span class="softname">chkconfig</span>
mechanism is still supported on a large range of Linux distros, and should still work in a compatible manner on systemd-based ones.
<br/>
Run this from the Linux shell:
<span class="pathname">chkconfig mailismus on</span>
</li>

<li>
Finally, there is the old-school mechanism of
<span class="softname">rc.d</span>
symbolic links, which works on all Linux and non-Linux Unix systems.
<br/>
This requires the creation of Start and Stop symbolic links to /etc/init.d/mailismus in the appropriate run-level scripts directory - typically rc3.d and rc5.d
The symbolic links should be named so as to start Mailismus late in the bootup sequence, and stop it early during shutdown.
<br/>
Eg.
<span class="pathname">/etc/rc.d/rc3.d/S99mailismus</span> (start)
and
<span class="pathname">/etc/rc.d/rc3.d/K01mailismus</span> (stop)
<br/>
Note that the exact rc3.d and rc5.d paths may differ between the various flavours of Unix.
</li>
</ul>

<p>
NB: Whichever bootup mechanism you choose, do not simply make
<span class="pathname">/etc/init.d/mailismus</span>
a symbolic link to
<span class="pathname">MTAHOME/bin/mta.sh</span>,
as the latter processes its pathname to locate the Mailismus config and does not contain the
<dfn>LSB</dfn>
comment block that is required by many Linux
<dfn>init</dfn>
variants.
</p>

<p>
You can now start and stop Mailismus as follows:<br/>
<span class="pathname">/etc/init.d/mailismus start</span>
<br/>
<span class="pathname">/etc/init.d/mailismus stop</span>
<br/> <br/>
Alternatively, on a systemd-based system, the following standard commands are preferable:<br/>
<span class="pathname">systemctl start mailismus</span>
... start Mailismus<br/>
<span class="pathname">systemctl stop mailismus</span>
... stop Mailismus<br/>
<span class="pathname">systemctl -l status mailismus</span>
... show Mailismus status
</p>

<hr class="pline"/>
<h2>
<a name="setup">
2.1.3 - Initial Setup
</a>
</h2>

<p>
Unpacking the binary download into MTAHOME will have left you with a runnable bare-bones Mailismus configuration, and we recommend that you go through the initial steps below to verify that this works as expected, before delving into the reference documentation to configure extra functionality.
</p>

<ol>
<li><b>Prepare Config</b><br/>
Open
<span class="pathname">MTAHOME/conf/mailismus.xml</span>
in a text editor, and observe the
<span class="cfgname">announcehost</span>
setting in the leading
<span class="cfgname">mta/application</span>
config block (see &sect;4.1).
<br/>
This is the hostname which Mailismus will announce in its SMTP HELO dialogue when it connects to other mail servers, and you should note that they may well validate it, and reject your connections if this name doesn't match your IP.
<br/>
It is initially set to
<span class="cfgvalue">%SYSNAME%</span>
which means Mailismus will obtain it automatically from the underlying OS, but you should beware that if your mailserver is sitting on a private IP subnet behind a NAT firewall, the local hostname is not what external mailservers will see.
If so, then edit the
<span class="cfgname">announcehost</span>
value to set it to your official external hostname.
<br/> <br/>
Mailismus itself can also be configured to validate the announced hostname in incoming connections, with varying degrees of rigour, although by default it won't validate it.
<br/>
See the
<span class="cfgname">validate_helo</span>
setting in section &sect;4.4.4 for the possibilities and this will also give you a flavour of the level of validation that other servers could apply to your announced hostname.

<br/><br/>
The
<span class="pathname">MTAHOME/conf/naf.xml</span>
config file is ready to run as shipped, and will create all its data (queued messages, etc) under
<span class="pathname">MTAHOME/var</span>.
<br/>
The
<span class="pathname">var</span>
directory tree will be created automatically at runtime, so you don't need to create any folders in advance.
<br/><br/>
</li>

<li><b>Verify Java Process Runs OK</b><br/>
Run the Mailismus startup script:
<span class="pathname">sh /path/to/MTAHOME/bin/mta.sh start</span>
<br/>
Mailismus should start up and create the
<span class="pathname">MTAHOME/mta-boot.log</span>
logfile, plus several more under
<span class="pathname">MTAHOME/var/logs/trace</span>
(one per Dispatcher).
<br/>
See the
<span class="cfgvalue">NAF Paths</span>
lines in mta-boot.log (which is basically a stdout capture) to verify where the other logfiles actually got put.

<br/><br/>
As a quick sanity test, look for obvious errors that don't require any knowledge of Mailismus to spot, for example:
<br/>
&bull; The Mailismus startup script should not have produced any output to screen, particularly any obvious error messages.
All output should have gone to the logfiles mentioned above.
<br/>
&bull; A quick glance at those logfiles should also indicate whether Mailismus started smoothly, or whether there was a show-stopping problem.
<br/> <br/>
Having passed this cursory inspection, you can stop Mailismus from the Unix command line:
<span class="pathname">sh /path/to/MTAHOME/bin/mta.sh stop</span>
<br/>
Verify that Mailismus has stopped, and no obvious errors appeared on screen or in the log files.
<br/><br/>
</li>

<li><b>Send Email Message</b><br/>
NB: This step tests the outbound SMTP-relay functionality.
If you are using Mailismus purely as a mailbox access server (ie. IMAP or POP3 server), then it is not applicable.
<br/><br/>
Configure your email client (ie. Outlook, Thunderbird, or whatever) to point at the Mailismus host as the outgoing SMTP server and send an email.
<br/> <br/>
Transcripts are enabled in the initial
<span class="pathname">MTAHOME/conf/mailismus.xml</span>
config file, so assuming you followed the instructions above and haven't altered that, you should be able to follow your email's progress through the MTA by viewing them.
<br/>
They will be in
<span class="pathname">MTAHOME/var/logs/transcripts</span>
and the Submit one will show your message being accepted into Mailismus, while the Delivery one will show it being forwarded on to its final destination (or not).
<br/> <br/>
Once Mailismus has delivered the message onwards, the audit logs under
<span class="pathname">MTAHOME/var/logs/audit</span>
will formally record its final status (see
<span class="pathname">delivered.log</span>)
<br/> <br/>
If there was a problem, the regular application logs under
<span class="pathname">MTAHOME/var/logs/trace</span>
should have all the details.
<br/> <br/>
</li>

<li><b><a name="setup_nafman">Verify NAFMAN</a></b><br/>
The final check is to point your browser at the web-based management app on port 13000 of the Mailismus machine (eg.
<span class="pathname">http://localhost:13000</span>).
<br/>
Verify that the NAFMAN management page appears.
It displays real-time monitoring info that you can explore later.
<br/> <br/>
In the unlikely event you want to change the default port of 13000, the NAFMAN
<span class="cfgname">baseport</span>
config setting (see section &sect;5 of the NAF Guide) provides the means to do so.
<br/>
See section &sect;5 of the
<a href="${grey.naf.devguide}/">NAF Guide</a>
for more info on NAFMAN.
<br/> <br/>
</li>
</ol>

<hr class="pline"/>
<h2>
<a name="nextsteps">
2.1.4 - Next Steps
</a>
</h2>
<p>
You now have a functioning mail server, with working defaults that enable the sending and receiving of messages.
<br/> <br/>
If you want to provide mailboxes for local users as well,
the next step is to configure the Message Store (see section &sect;4.2)
followed by enabling the IMAP server (section &sect;4.7)
and/or the POP server (section &sect;4.8).
<br/>
It is likely you would only want one or the other in regards to the IMAP and POP servers, but they are not mutually exclusive and you could have both, to support the preferences of all your users.
<br/>
Whichever of them you choose, the POP Downloader (see section &sect;4.9) may be used with either, to consolidate messages held at either mailservers into your Mailismus mailboxes.
<br/> <br/>
Once Mailismus is bedded in, you will probably want to turn off transcript logging, which comes enabled by default.
<br/>
This is simply a matter of setting
<span class="cfgvalue">enabled="N"</span>
in the
<span class="cfgname">transcript</span>
elements of
<span class="pathname">MTAHOME\conf\mailismus.xml</span>.
<br/> <br/>
You may also want to vary the logging levels configured in
<span class="pathname">MTAHOME\conf\logging.xml</span>.
<br/>
<span class="cfgvalue">INFO</span>
is the neutral level, while
<span class="cfgvalue">TRC</span>,
<span class="cfgvalue">TRC2</span> and
<span class="cfgvalue">TRC3</span>
show progressively more detail.
</p>

</div>
</BODY>
</HTML>
